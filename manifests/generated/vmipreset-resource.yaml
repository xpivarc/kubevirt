apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    kubevirt.io: ""
  name: virtualmachineinstancepresets.kubevirt.io
spec:
  group: kubevirt.io
  names:
    categories:
    - all
    kind: VirtualMachineInstancePreset
    plural: virtualmachineinstancepresets
    shortNames:
    - vmipreset
    - vmipresets
    singular: virtualmachineinstancepreset
  preserveUnknownFields: true
  scope: Namespaced
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
  "validation":
    "openAPIV3Schema":
      type: object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: VirtualMachineInstance Spec contains the VirtualMachineInstance
            specification.
          type: object
          properties:
            domain:
              description: Domain is the same object type as contained in VirtualMachineInstanceSpec
              type: object
              properties:
                chassis:
                  description: Chassis specifies the chassis info passed to the domain.
                  type: object
                  properties:
                    asset:
                      type: string
                    manufacturer:
                      type: string
                    serial:
                      type: string
                    sku:
                      type: string
                    version:
                      type: string
                clock:
                  description: Clock sets the clock and timers of the vmi.
                  type: object
                  properties:
                    hpet:
                      description: HPET (High Precision Event Timer) - multiple timers
                        with periodic interrupts.
                      type: object
                      properties:
                        present:
                          description: Enabled set to false makes sure that the machine
                            type or a preset can't add the timer. Defaults to true.
                          type: boolean
                        tickPolicy:
                          description: TickPolicy determines what happens when QEMU
                            misses a deadline for injecting a tick to the guest. One
                            of "delay", "catchup", "merge", "discard".
                          type: string
                    hyperv:
                      description: Hyperv (Hypervclock) - lets guests read the host’s
                        wall clock time (paravirtualized). For windows guests.
                      type: object
                      properties:
                        present:
                          description: Enabled set to false makes sure that the machine
                            type or a preset can't add the timer. Defaults to true.
                          type: boolean
                    kvm:
                      description: "KVM \t(KVM clock) - lets guests read the host’s
                        wall clock time (paravirtualized). For linux guests."
                      type: object
                      properties:
                        present:
                          description: Enabled set to false makes sure that the machine
                            type or a preset can't add the timer. Defaults to true.
                          type: boolean
                    pit:
                      description: PIT (Programmable Interval Timer) - a timer with
                        periodic interrupts.
                      type: object
                      properties:
                        present:
                          description: Enabled set to false makes sure that the machine
                            type or a preset can't add the timer. Defaults to true.
                          type: boolean
                        tickPolicy:
                          description: TickPolicy determines what happens when QEMU
                            misses a deadline for injecting a tick to the guest. One
                            of "delay", "catchup", "discard".
                          type: string
                    rtc:
                      description: RTC (Real Time Clock) - a continuously running
                        timer with periodic interrupts.
                      type: object
                      properties:
                        present:
                          description: Enabled set to false makes sure that the machine
                            type or a preset can't add the timer. Defaults to true.
                          type: boolean
                        tickPolicy:
                          description: TickPolicy determines what happens when QEMU
                            misses a deadline for injecting a tick to the guest. One
                            of "delay", "catchup".
                          type: string
                        track:
                          description: Track the guest or the wall clock.
                          type: string
                    timezone:
                      description: Timezone sets the guest clock to the specified
                        timezone. Zone name follows the TZ environment variable format
                        (e.g. 'America/New_York').
                      type: string
                    utc:
                      description: UTC sets the guest clock to UTC on each boot. If
                        an offset is specified, guest changes to the clock will be
                        kept during reboots and are not reset.
                      type: object
                      properties:
                        offsetSeconds:
                          description: OffsetSeconds specifies an offset in seconds,
                            relative to UTC. If set, guest changes to the clock will
                            be kept during reboots and not reset.
                          type: integer
                cpu:
                  description: CPU allow specified the detailed CPU topology inside
                    the vmi.
                  type: object
                  properties:
                    cores:
                      description: Cores specifies the number of cores inside the
                        vmi. Must be a value greater or equal 1.
                      type: integer
                      format: int32
                    dedicatedCpuPlacement:
                      description: DedicatedCPUPlacement requests the scheduler to
                        place the VirtualMachineInstance on a node with enough dedicated
                        pCPUs and pin the vCPUs to it.
                      type: boolean
                    features:
                      description: Features specifies the CPU features list inside
                        the VMI.
                      type: array
                      items:
                        description: CPUFeature allows specifying a CPU feature.
                        type: object
                        properties:
                          name:
                            description: Name of the CPU feature
                            type: string
                          policy:
                            description: 'Policy is the CPU feature attribute which
                              can have the following attributes: force    - The virtual
                              CPU will claim the feature is supported regardless of
                              it being supported by host CPU. require  - Guest creation
                              will fail unless the feature is supported by the host
                              CPU or the hypervisor is able to emulate it. optional
                              - The feature will be supported by virtual CPU if and
                              only if it is supported by host CPU. disable  - The
                              feature will not be supported by virtual CPU. forbid   -
                              Guest creation will fail if the feature is supported
                              by host CPU. Defaults to require'
                            type: string
                    isolateEmulatorThread:
                      description: IsolateEmulatorThread requests one more dedicated
                        pCPU to be allocated for the VMI to place the emulator thread
                        on it.
                      type: boolean
                    model:
                      description: Model specifies the CPU model inside the VMI. List
                        of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
                        It is possible to specify special cases like "host-passthrough"
                        to get the same CPU as the node and "host-model" to get CPU
                        closest to the node one. Defaults to host-model.
                      type: string
                    sockets:
                      description: Sockets specifies the number of sockets inside
                        the vmi. Must be a value greater or equal 1.
                      type: integer
                      format: int32
                    threads:
                      description: Threads specifies the number of threads inside
                        the vmi. Must be a value greater or equal 1.
                      type: integer
                      format: int32
                devices:
                  description: Devices allows adding disks, network interfaces, and
                    others
                  type: object
                  properties:
                    autoattachGraphicsDevice:
                      description: Whether to attach the default graphics device or
                        not. VNC will not be available if set to false. Defaults to
                        true.
                      type: boolean
                    autoattachPodInterface:
                      description: Whether to attach a pod network interface. Defaults
                        to true.
                      type: boolean
                    autoattachSerialConsole:
                      description: Whether to attach the default serial console or
                        not. Serial console access will not be available if set to
                        false. Defaults to true.
                      type: boolean
                    blockMultiQueue:
                      description: Whether or not to enable virtio multi-queue for
                        block devices
                      type: boolean
                    disks:
                      description: Disks describes disks, cdroms, floppy and luns
                        which are connected to the vmi.
                      type: array
                      items:
                        type: object
                        properties:
                          bootOrder:
                            description: BootOrder is an integer value > 0, used to
                              determine ordering of boot devices. Lower values take
                              precedence. Each disk or interface that has a boot order
                              must have a unique value. Disks without a boot order
                              are not tried if a disk with a boot order exists.
                            type: integer
                          cache:
                            description: Cache specifies which kvm disk cache mode
                              should be used.
                            type: string
                          cdrom:
                            description: Attach a volume as a cdrom to the vmi.
                            type: object
                            properties:
                              bus:
                                description: 'Bus indicates the type of disk device
                                  to emulate. supported values: virtio, sata, scsi.'
                                type: string
                              readonly:
                                description: ReadOnly. Defaults to true.
                                type: boolean
                              tray:
                                description: Tray indicates if the tray of the device
                                  is open or closed. Allowed values are "open" and
                                  "closed". Defaults to closed.
                                type: string
                          dedicatedIOThread:
                            description: dedicatedIOThread indicates this disk should
                              have an exclusive IO Thread. Enabling this implies useIOThreads
                              = true. Defaults to false.
                            type: boolean
                          disk:
                            description: Attach a volume as a disk to the vmi.
                            type: object
                            properties:
                              bus:
                                description: 'Bus indicates the type of disk device
                                  to emulate. supported values: virtio, sata, scsi.'
                                type: string
                              pciAddress:
                                description: 'If specified, the virtual disk will
                                  be placed on the guests pci address with the specifed
                                  PCI address. For example: 0000:81:01.10'
                                type: string
                              readonly:
                                description: ReadOnly. Defaults to false.
                                type: boolean
                          floppy:
                            description: Attach a volume as a floppy to the vmi.
                            type: object
                            properties:
                              readonly:
                                description: ReadOnly. Defaults to false.
                                type: boolean
                              tray:
                                description: Tray indicates if the tray of the device
                                  is open or closed. Allowed values are "open" and
                                  "closed". Defaults to closed.
                                type: string
                          lun:
                            description: Attach a volume as a LUN to the vmi.
                            type: object
                            properties:
                              bus:
                                description: 'Bus indicates the type of disk device
                                  to emulate. supported values: virtio, sata, scsi.'
                                type: string
                              readonly:
                                description: ReadOnly. Defaults to false.
                                type: boolean
                          name:
                            description: Name is the device name
                            type: string
                          serial:
                            description: Serial provides the ability to specify a
                              serial number for the disk device.
                            type: string
                    gpus:
                      description: Whether to attach a GPU device to the vmi.
                      type: array
                      items:
                        type: object
                        properties:
                          deviceName:
                            type: string
                          name:
                            description: Name of the GPU device as exposed by a device
                              plugin
                            type: string
                    inputs:
                      description: Inputs describe input devices
                      type: array
                      items:
                        type: object
                        properties:
                          bus:
                            description: 'Bus indicates the bus of input device to
                              emulate. Supported values: virtio, usb.'
                            type: string
                          name:
                            description: Name is the device name
                            type: string
                          type:
                            description: 'Type indicated the type of input device.
                              Supported values: tablet.'
                            type: string
                    interfaces:
                      description: Interfaces describe network interfaces which are
                        added to the vmi.
                      type: array
                      items:
                        type: object
                        properties:
                          bootOrder:
                            description: BootOrder is an integer value > 0, used to
                              determine ordering of boot devices. Lower values take
                              precedence. Each interface or disk that has a boot order
                              must have a unique value. Interfaces without a boot
                              order are not tried.
                            type: integer
                          bridge:
                            type: object
                          dhcpOptions:
                            description: If specified the network interface will pass
                              additional DHCP options to the VMI
                            type: object
                            properties:
                              bootFileName:
                                description: If specified will pass option 67 to interface's
                                  DHCP server
                                type: string
                              ntpServers:
                                description: If specified will pass the configured
                                  NTP server to the VM via DHCP option 042.
                                type: array
                                items:
                                  type: string
                              privateOptions:
                                description: 'If specified will pass extra DHCP options
                                  for private use, range: 224-254'
                                type: array
                                items:
                                  description: DHCPExtraOptions defines Extra DHCP
                                    options for a VM.
                                  type: object
                                  properties:
                                    option:
                                      description: Option is an Integer value from
                                        224-254 Required.
                                      type: integer
                                    value:
                                      description: Value is a String value for the
                                        Option provided Required.
                                      type: string
                              tftpServerName:
                                description: If specified will pass option 66 to interface's
                                  DHCP server
                                type: string
                          macAddress:
                            description: 'Interface MAC address. For example: de:ad:00:00:be:af
                              or DE-AD-00-00-BE-AF.'
                            type: string
                          masquerade:
                            type: object
                          model:
                            description: 'Interface model. One of: e1000, e1000e,
                              ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.
                              TODO:(ihar) switch to enums once opengen-api supports
                              them. See: https://github.com/kubernetes/kube-openapi/issues/51'
                            type: string
                          name:
                            description: Logical name of the interface as well as
                              a reference to the associated networks. Must match the
                              Name of a Network.
                            type: string
                          pciAddress:
                            description: 'If specified, the virtual network interface
                              will be placed on the guests pci address with the specifed
                              PCI address. For example: 0000:81:01.10'
                            type: string
                          ports:
                            description: List of ports to be forwarded to the virtual
                              machine.
                            type: array
                            items:
                              description: Port repesents a port to expose from the
                                virtual machine. Default protocol TCP. The port field
                                is mandatory
                              type: object
                              properties:
                                name:
                                  description: If specified, this must be an IANA_SVC_NAME
                                    and unique within the pod. Each named port in
                                    a pod must have a unique name. Name for the port
                                    that can be referred to by services.
                                  type: string
                                port:
                                  description: Number of port to expose for the virtual
                                    machine. This must be a valid port number, 0 <
                                    x < 65536.
                                  type: integer
                                  format: int32
                                protocol:
                                  description: Protocol for port. Must be UDP or TCP.
                                    Defaults to "TCP".
                                  type: string
                          slirp:
                            type: object
                          sriov:
                            type: object
                    networkInterfaceMultiqueue:
                      description: If specified, virtual network interfaces configured
                        with a virtio bus will also enable the vhost multiqueue feature
                      type: boolean
                    rng:
                      description: Whether to have random number generator from host
                      type: object
                    watchdog:
                      description: Watchdog describes a watchdog device which can
                        be added to the vmi.
                      type: object
                      properties:
                        i6300esb:
                          description: i6300esb watchdog device.
                          type: object
                          properties:
                            action:
                              description: The action to take. Valid values are poweroff,
                                reset, shutdown. Defaults to reset.
                              type: string
                        name:
                          description: Name of the watchdog.
                          type: string
                features:
                  description: Features like acpi, apic, hyperv, smm.
                  type: object
                  properties:
                    acpi:
                      description: ACPI enables/disables ACPI insidejsondata guest.
                        Defaults to enabled.
                      type: object
                      properties:
                        enabled:
                          description: Enabled determines if the feature should be
                            enabled or disabled on the guest. Defaults to true.
                          type: boolean
                    apic:
                      description: Defaults to the machine type setting.
                      type: object
                      properties:
                        enabled:
                          description: Enabled determines if the feature should be
                            enabled or disabled on the guest. Defaults to true.
                          type: boolean
                        endOfInterrupt:
                          description: EndOfInterrupt enables the end of interrupt
                            notification in the guest. Defaults to false.
                          type: boolean
                    hyperv:
                      description: Defaults to the machine type setting.
                      type: object
                      properties:
                        evmcs:
                          description: EVMCS Speeds up L2 vmexits, but disables other
                            virtualization features. Requires vapic. Defaults to the
                            machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        frequencies:
                          description: Frequencies improves the TSC clock source handling
                            for Hyper-V on KVM. Defaults to the machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        ipi:
                          description: IPI improves performances in overcommited environments.
                            Requires vpindex. Defaults to the machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        reenlightenment:
                          description: Reenlightenment enables the notifications on
                            TSC frequency changes. Defaults to the machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        relaxed:
                          description: Relaxed instructs the guest OS to disable watchdog
                            timeouts. Defaults to the machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        reset:
                          description: Reset enables Hyperv reboot/reset for the vmi.
                            Requires synic. Defaults to the machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        runtime:
                          description: Runtime improves the time accounting to improve
                            scheduling in the guest. Defaults to the machine type
                            setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        spinlocks:
                          description: Spinlocks allows to configure the spinlock
                            retry attempts.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                            spinlocks:
                              description: Retries indicates the number of retries.
                                Must be a value greater or equal 4096. Defaults to
                                4096.
                              type: integer
                              format: int32
                        synic:
                          description: SyNIC enables the Synthetic Interrupt Controller.
                            Defaults to the machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        synictimer:
                          description: SyNICTimer enables Synthetic Interrupt Controller
                            Timers, reducing CPU load. Defaults to the machine type
                            setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        tlbflush:
                          description: TLBFlush improves performances in overcommited
                            environments. Requires vpindex. Defaults to the machine
                            type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        vapic:
                          description: VAPIC improves the paravirtualized handling
                            of interrupts. Defaults to the machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                        vendorid:
                          description: VendorID allows setting the hypervisor vendor
                            id. Defaults to the machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                            vendorid:
                              description: VendorID sets the hypervisor vendor id,
                                visible to the vmi. String up to twelve characters.
                              type: string
                        vpindex:
                          description: VPIndex enables the Virtual Processor Index
                            to help windows identifying virtual processors. Defaults
                            to the machine type setting.
                          type: object
                          properties:
                            enabled:
                              description: Enabled determines if the feature should
                                be enabled or disabled on the guest. Defaults to true.
                              type: boolean
                    smm:
                      description: SMM enables/disables System Management Mode. TSEG
                        not yet implemented.
                      type: object
                      properties:
                        enabled:
                          description: Enabled determines if the feature should be
                            enabled or disabled on the guest. Defaults to true.
                          type: boolean
                firmware:
                  description: Firmware.
                  type: object
                  properties:
                    bootloader:
                      description: Settings to control the bootloader that is used.
                      type: object
                      properties:
                        bios:
                          description: If set (default), BIOS will be used.
                          type: object
                        efi:
                          description: If set, EFI will be used instead of BIOS.
                          type: object
                    serial:
                      description: The system-serial-number in SMBIOS
                      type: string
                    uuid:
                      description: UUID reported by the vmi bios. Defaults to a random
                        generated uid.
                      type: string
                ioThreadsPolicy:
                  description: 'Controls whether or not disks will share IOThreads.
                    Omitting IOThreadsPolicy disables use of IOThreads. One of: shared,
                    auto'
                  type: string
                machine:
                  description: Machine type.
                  type: object
                  properties:
                    type:
                      description: QEMU machine type is the actual chipset of the
                        VirtualMachineInstance.
                      type: string
                memory:
                  description: Memory allow specifying the VMI memory features.
                  type: object
                  properties:
                    guest:
                      description: Guest allows to specifying the amount of memory
                        which is visible inside the Guest OS. The Guest must lie between
                        Requests and Limits from the resources section. Defaults to
                        the requested memory in the resources section if not specified.
                      type: string
                    hugepages:
                      description: Hugepages allow to use hugepages for the VirtualMachineInstance
                        instead of regular memory.
                      type: object
                      properties:
                        pageSize:
                          description: PageSize specifies the hugepage size, for x86_64
                            architecture valid values are 1Gi and 2Mi.
                          type: string
                resources:
                  description: Resources describes the Compute Resources required
                    by this vmi.
                  type: object
                  properties:
                    limits:
                      description: Limits describes the maximum amount of compute
                        resources allowed. Valid resource keys are "memory" and "cpu".
                      type: object
                      additionalProperties:
                        type: string
                    overcommitGuestOverhead:
                      description: Don't ask the scheduler to take the guest-management
                        overhead into account. Instead put the overhead only into
                        the container's memory limit. This can lead to crashes if
                        all memory is in use on a node. Defaults to false.
                      type: boolean
                    requests:
                      description: Requests is a description of the initial vmi resources.
                        Valid resource keys are "memory" and "cpu".
                      type: object
                      additionalProperties:
                        type: string
            selector:
              description: Selector is a label query over a set of VMIs. Required.
              type: object
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  type: array
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    type: object
                    required:
                    - key
                    - operator
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        type: array
                        items:
                          type: string
                matchLabels:
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
                  additionalProperties:
                    type: string
