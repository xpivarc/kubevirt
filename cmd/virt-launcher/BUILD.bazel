load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["virt-launcher.go"],
    importpath = "kubevirt.io/kubevirt/cmd/virt-launcher",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/cloud-init:go_default_library",
        "//pkg/config:go_default_library",
        "//pkg/container-disk:go_default_library",
        "//pkg/ephemeral-disk:go_default_library",
        "//pkg/ephemeral-disk-utils:go_default_library",
        "//pkg/hooks:go_default_library",
        "//pkg/hotplug-disk:go_default_library",
        "//pkg/ignition:go_default_library",
        "//pkg/virt-handler/cmd-client:go_default_library",
        "//pkg/virt-launcher:go_default_library",
        "//pkg/virt-launcher/notify-client:go_default_library",
        "//pkg/virt-launcher/virtwrap:go_default_library",
        "//pkg/virt-launcher/virtwrap/agent-poller:go_default_library",
        "//pkg/virt-launcher/virtwrap/api:go_default_library",
        "//pkg/virt-launcher/virtwrap/cli:go_default_library",
        "//pkg/virt-launcher/virtwrap/cmd-server:go_default_library",
        "//pkg/virt-launcher/virtwrap/util:go_default_library",
        "//staging/src/kubevirt.io/client-go/api/v1:go_default_library",
        "//staging/src/kubevirt.io/client-go/log:go_default_library",
        "//vendor/github.com/spf13/pflag:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/types:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/watch:go_default_library",
        "//vendor/libvirt.org/libvirt-go:go_default_library",
    ],
)

load("//vendor/kubevirt.io/client-go/version:def.bzl", "version_x_defs")

go_binary(
    name = "virt-launcher",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
    x_defs = version_x_defs(),
)

genrule(
    name = "setcaps",
    srcs = [":virt-launcher"],
    outs = ["virt-launcher.tar.gz"],
    cmd = "path=$$(readlink -f $(location virt-launcher)) && cp $$path . && setcap 'cap_net_bind_service+ep cap_net_admin+ep' virt-launcher && tar --xattrs -czvf virt-launcher.tar.gz virt-launcher && mv virt-launcher.tar.gz $@",
    visibility = ["//visibility:public"],
)

load("@io_bazel_rules_docker//contrib:passwd.bzl", "passwd_entry", "passwd_tar")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")

pkg_tar(
    name = "qemu-allow",
    srcs = [
        ":bridge.conf",
        ":libvirt.conf",
        ":qemu.conf",
        ":virt.conf",
    ],
    mode = "640",
    owner = "1000.1000",
    package_dir = "/home/virt/.cache/libvirt/qemu",
)

pkg_tar(
    name = "qemu-kvm-allow",
    srcs = [
        ":bridge.conf",
        ":libvirt.conf",
        ":qemu.conf",
        ":virt.conf",
    ],
    mode = "640",
    owner = "1000.1000",
    package_dir = "/etc/qemu-kvm",
)

passwd_entry(
    name = "virt",
    create_home = True,
    gid = 1000,
    home = "/home/virt/",
    uid = 1000,
    username = "virt",
)

passwd_entry(
    name = "root",
    gid = 0,
    home = "/root",
    shell = "/bin/bash",
    uid = 0,
    username = "root",
)

passwd_entry(
    name = "qemu",
    gid = 107,
    home = "/",
    shell = "/sbin/nologin",
    uid = 107,
    username = "qemu",
)

# passwd_tar(
#     name = "passwd",
#     entries = [
#         ":root",
#         ":qemu",
#         ":virt",
#     ],
#     passwd_file_pkg_dir = "etc",
# )

load("@io_bazel_rules_docker//contrib:group.bzl", "group_entry", "group_file")

group_entry(
    name = "root_group",
    gid = 0,
    groupname = "root",
)

group_entry(
    name = "launcher_group",
    gid = 1000,
    groupname = "virt",
    users = [
        "virt",
        "qemu",
    ],
)

group_entry(
    name = "qemu_group",
    gid = 107,
    groupname = "qemu",
    users = [
        "virt",
        "qemu",
    ],
)

group_entry(
    name = "libvirt_group",
    gid = 992,
    groupname = "libvirt",
    users = [
        "virt",
    ],
)

group_entry(
    name = "kvm_group",
    gid = 36,
    groupname = "kvm",
    users = [
        "qemu",
        "virt",
    ],
)

group_file(
    name = "group",
    entries = [
        ":root_group",
        ":launcher_group",
        ":qemu_group",
        ":libvirt_group",
        ":kvm_group",
    ],
)

pkg_tar(
    name = "group_tar",
    srcs = [":group"],
    mode = "0o644",
    package_dir = "etc",
)

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
)
load("@io_bazel_rules_docker//contrib:group.bzl", "group_entry", "group_file")
load("@io_bazel_rules_docker//contrib:passwd.bzl", "passwd_entry", "passwd_file")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")

passwd_entry(
    name = "root-user",
    gid = 0,
    home = "/root",
    info = "root",
    shell = "/bin/bash",
    uid = 0,
    username = "root",
)

group_entry(
    name = "qemu-group",
    gid = 107,
    groupname = "qemu",
)

group_entry(
    name = "root-group",
    gid = 0,
    groupname = "qemu",
)

# group_file(
#     name = "group",
#     entries = [
#         ":qemu-group",
#         ":root-group",
#     ],
# )

passwd_entry(
    name = "qemu-user",
    gid = 107,
    home = "",
    shell = "/bin/bash",
    uid = 107,
    username = "qemu",
)

passwd_file(
    name = "passwd",
    entries = [
        ":qemu-user",
        ":root-user",
        ":virt",
    ],
)

pkg_tar(
    name = "libvirt-config",
    srcs = [
        ":libvirtd.conf",
        ":qemu.conf",
    ],
    package_dir = "/etc/libvirt",
)

pkg_tar(
    name = "passwd-tar",
    srcs = [
        ":group",
        ":passwd",
    ],
    mode = "0644",
    package_dir = "etc",
    visibility = ["//visibility:public"],
)

container_image(
    name = "version-container",
    directory = "/",
    files = ["//:get-version"],
    tars = [
        ":libvirt-config",
        ":passwd-tar",
        "//rpm:launcherbase_x86_64",
        # ":passwd",
        ":group_tar",
        ":qemu-allow",
        ":qemu-kvm-allow",
    ],
)

container_image(
    name = "virt-launcher-image",
    architecture = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": "ppc64le",
        "//conditions:default": "amd64",
    }),
    base = ":version-container",
    directory = "/usr/bin",
    entrypoint = ["/usr/bin/virt-launcher"],
    files = [
        "//cmd/container-disk-v2alpha:container-disk",
    ],
    tars = [":setcaps"],
    visibility = ["//visibility:public"],
)
